PROBLEM STATEMENTS: 

1: INTRODUCTION

In control structures tutorial, we learned about various methods to iterate over a collection like 
unless, loop and the most commonly used each method.

Ruby, however, provides an Enumerable module which packages a bunch of methods which can be used with 
any other class by including it (referred to as mixing in). That means that programmers don't have to write 
all those methods many different times for different objects. As long as the custom object defines an each 
method and includes Enumerable module, it can get access to all of its magic.

In this challenge, you have been provided with a custom object called colors that defines its own each method. 
You need to iterate over the items and return an Array containing the values.

2: EACH WITH INDEX

In this challenge, your task is to complete the skip_animals method that takes an animals array and a skip 
integer and returns an array of all elements except first skip number of items as shown in the example below.

For example,

> skip_animals(['leopard', 'bear', 'fox', 'wolf'], 2)
=> ["2:fox", "3:wolf"]

It is guaranteed that number of items in animals array is greater than the value of skip.
